<?php
/**
 * Author: Hzhihua
 * Date: 17-10-23
 * Time: 下午5:07
 * Hzhihua <1044144905@qq.com>
 */

namespace common\models;

use Yii;
use yii\base\ModelEvent;
use yii\db\ActiveRecord;

/**
 * Class BaseModel
 * 所有数据表model类都继承此类
 *
 * 记录创建时间字段都为 created_at
 * 记录修改时间字段都为 updated_at
 *
 * @property int $created_at 记录数据创建时间
 * @property int $updated_at 记录数据修改时间
 * @package common\models
 */
class BaseModel extends ActiveRecord
{
    /**
     * 初始化变量
     */
    public function init()
    {
        parent::init();

        if (Yii::$app->getRequest()->isPost) {
            // insert
            if ($this->isNewRecord) {
                Yii::info("Set scenario to 'insert' in '" . get_class($this) . "'.'", __METHOD__);
                $this->setScenario('insert');

                // update
            } else {
                Yii::info("Set scenario to 'update' in '" . get_class($this) . "'.'", __METHOD__);
                $this->setScenario('update');
            }
        }


    }

    public function behaviors()
    {
        return array_merge(parent::behaviors(), [
            [
                'class' => 'yii\behaviors\TimestampBehavior',
            ],
        ]);
    }

    /**
     * @inheritdoc
     */
    public function beforeSave($insert)
    {
        if ($insert) {
            Yii::info("Event on 'beforeInsert' in '" . get_class($this) . "'.'", __METHOD__);
            $this->on(self::EVENT_BEFORE_INSERT, [$this, 'beforeInsert']);

        } else {
            Yii::info("Event on 'beforeUpdate' in '" . get_class($this) . "'.'", __METHOD__);
            $this->on(self::EVENT_BEFORE_UPDATE, [$this, 'beforeUpdate']);
        }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * 在添加数据之前调用
     * @param ModelEvent $event
     * @return bool
     */
    public function beforeInsert($event)
    {
        Yii::info('Running beforeInsert in \'' . get_class($this) . '\'.', __METHOD__);

        $this->created_at = $_SERVER['REQUEST_TIME'];
        $this->updated_at = $_SERVER['REQUEST_TIME'];

        return $event->isValid;
    }

    /**
     * 在修改数据之前调用
     * @param ModelEvent $event
     * @return bool
     */
    public function beforeUpdate($event)
    {
        Yii::info('Running beforeUpdate in \'' . get_class($this) . '\'.', __METHOD__);

        unset($this->created_at);
        $this->updated_at = $_SERVER['REQUEST_TIME'];

        return $event->isValid;
    }
}